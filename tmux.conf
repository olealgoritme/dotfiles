set -gq utf8 on

set -ga terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "screen-256color"

# Ctrl-Space is my prefix
set -g prefix C-Space
bind C-space send-prefix
bind C-Space last-window

set -s escape-time 0

# Reload tmux configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..." \; move-window -r

# increase history limit
set -g history-limit 5000

# mouse mode on by-default
set-option -g mouse on

#setw -g aggressive-resize on

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm-256color:Tc'
setw -g xterm-keys on
setw -g focus-events on

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# visual notification of activity in other windows
set-window-option -g monitor-activity on
setw -g visual-activity off

bind-key -n M-z resize-pane -Z

# switch windows with alt+number
#bind-key -n M-1 select-window -t 1
#bind-key -n M-2 select-window -t 2
#bind-key -n M-3 select-window -t 3
#bind-key -n M-4 select-window -t 4
#bind-key -n M-5 select-window -t 5
#bind-key -n M-6 select-window -t 6
#bind-key -n M-7 select-window -t 7
#bind-key -n M-8 select-window -t 8
#bind-key -n M-9 select-window -t 9

# alt-tab to switch to last active window
#bind-key -n M-tab last-window

# fast pane switching
# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# Shift arrow to switch windows
#bind -n S-Left  previous-window
#bind -n S-Right next-window

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Resize panes
bind-key -n C-S-Up resize-pane -U 5
bind-key -n C-S-Down resize-pane -D 5
bind-key -n C-S-Left resize-pane -L 10
bind-key -n C-S-Right resize-pane -R 10

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Move windows to left-rigth
bind-key -n M-S-Left swap-window -t -1
bind-key -n M-S-Right swap-window -t +1

bind-key s run-shell "~/.tmux/tmux_split_pane.sh --smart"
bind-key C-s command-prompt -p "Open new pane with command:" "run-shell \"~/.tmux/tmux_split_pane.sh --smart '%1'\""

# Theme
#source ~/.tmux/themes/tmux.gruvbox.theme
run-shell '~/.tmux/themes/tmux-airline-dracula/airline-dracula.tmux'

# Plugins
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'


# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
